Ext.define("Ozone.components.admin.dashboard.DashboardEditPropertiesTab",{extend:"Ozone.components.PropertiesPanel",alias:["widget.dashboardeditproperties","widget.dashboardeditpropertiestab","widget.Ozone.components.admin.dashboard.DashboardEditPropertiesTab"],cls:"dashboardeditpropertiestab",initComponent:function(){Ext.apply(this,{title:"Properties",iconCls:"properties-tab",items:[{xtype:"hidden",name:"guid",preventMark:true,itemId:"guid"},{xtype:"textfield",name:"name",fieldLabel:Ozone.util.createRequiredLabel("Name"),allowBlank:false,maxLength:200,enforceMaxLength:true,itemId:"name",labelWidth:140},{xtype:"textarea",name:"description",fieldLabel:"Description",allowBlank:true,maxLength:255,enforceMaxLength:true,itemId:"description",labelWidth:140},{xtype:"textarea",fieldLabel:Ozone.util.createRequiredLabel("Definition"),name:"definition",itemId:"definition",allowBlank:true,labelWidth:140,height:160,minHeight:160,validator:function(b){try{Ext.decode(b)}catch(a){return"This field must be a valid JSON Object string"}if(b!=null&&b.length>0&&b.charAt(0)=="["&&b.charAt(b.length-1)=="]"){return"This field must be a valid JSON Object string"}return true}}]});this.callParent(arguments)},initFieldValues:function(a){var c=a?a.data:a;if(c!=null){this.getComponent("guid").setValue(c.guid!=null?c.guid:"");this.getComponent("name").setValue(c.name!=null?c.name:"");this.getComponent("description").setValue(c.description!=null?c.description:"");var b=null;if(c!=null){b=owfdojo.toJson(c,true)}this.getComponent("definition").setValue(b!=null?b:"")}},onApply:function(){this.validateFields();if(!this.getForm().hasInvalidField()){var a=this;var d=a.ownerCt;var f=this.getValues();var b=f.name;var i=f.description;var c=f.definition;var h=Ext.decode(c);if(f.guid!=""&&f.guid!=null){h.guid=f.guid}h.name=b;h.description=i;var e=d.store.getAt(0);if(e!=null){e.beginEdit();e.data={};for(var g in h){if(!Ext.isFunction(g)){e.set(g,h[g])}}e.endEdit()}else{if(d.launchData==null||d.launchData.isCreate||f.guid==""||f.guid==null){h.guid=guid.util.guid()}d.store.add(h);e=d.store.data.items[0];e.phantom=true}d.store.on({write:{fn:function(k,j,l){var m=j.getRecords();if(m){var n=m[0];if(n){var o=n.getId();if(o){d.recordId=o}this.initFieldValues(n);d.enableTabs()}}d.fireEvent("itemcreated",d.recordId)},scope:this,single:this}});d.store.sync()}else{this.showApplyAlert("Invalid field, changes cannot be saved.",3000)}}});